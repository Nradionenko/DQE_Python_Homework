[LABELS]
news_label = News
ad_label = Ad
recipe_label = Recipe
capital_all = Treat proper names as common names
keep_titles = Keep what looks like proper name or abbreviation
manual = Input manually
from_file = Write from txt
from_json = Write from json
def_file = Default source
my_file = My source

[PATTERNS]
date_format = %d/%m/%Y
date_time_text = %d/%m/%Y %H.%M
    ; split_text: split by ending characters followed by space ([?!.]\s{1,}), but not preceded by i.e or e.g
    ; or by 2 and more whitespaces (to capture paragraphs, not preceded by ending chars)
    ; or by non-alphanumeric char surrounded by whitespaces (for cases, when paragraph starts with *, -, etc.
    ; keep delimiters in split
split_text = ((?<!i.e)(?<!e.g)[?!.]\s{1,}|\s{2,}|\n|\n\W\s{1,})
    ; split_sentence: split string into words by spaces or characters (like comma etc); keep the delimiters.
split_sentence = (\W|\s)

[INPUTS]
section = What section would you like to add?
input_format = How would you like to add text to the file?
city_msg = Please type in city name and hit ENTER:
news_msg = Please type in news text and hit ENTER:
ad_msg = Please type in your ad text and hit ENTER:
ad_date = Please type in expiration date for your ad in the following format: ${PATTERNS:date_format}
recipe_msg = Please add your recipe text
recipe_calories = How many calories is that?
proceed_msg = Your section written to ${PATHS:target_file}! Would you like to add another section? (Y/N)
filepath = Provide full path to the source file:
normalize_strategy = Before we normalize the text, what should we do with proper names in text?
proper_names = Add custom proper names, separated by commas:
choose_source = What file would you like to write from?

[MESSAGES]
ad_summary = Valid until: %s, %s day(s) left
fitness1 = Fitness tip: 0 calories, really? Is it water? Take 2l of this daily)
fitness2 = Fitness tip: nice, light healthy food!
fitness3 = Fitness tip: oh, that's a lot of calories! Don't forget to work out!
calories_measure = Kcal
goodbye = Thank you and see you again!
write_success = Records successfully written from %s to %s.
delete_success = %s file(s) deleted.

[RESTRICTIONS]
max_size = 256
; n is a separator character to be used to visually separate sections in target files, like: ---------
n = -
count_n = 30
cal_min = 0
cal_max = 500

[ERRORS]
long_text = Your text is too long. Max size accepted is ${RESTRICTIONS:max_size} characters.
past_date = Sorry, expiration date can not be in the past.
empty = This file is empty, choose another one.
maxlength = Max number of rows you can extract from the file is
cannot_read = Sorry, can't decode the source file or the file type is not acceptable.

[PATHS]
files_folder = files
target_file = target_file.txt
source_file = source_text.txt
csv_words = words_count.csv
csv_letters = letters_count.csv
json_schema = schema.json
json_source = source_json.json

[HEADERS]
letter = char
total = tot
upper = upper
perc = perc

[PROPERTIES]
text = text
date = date
city = city
kcal = calories
